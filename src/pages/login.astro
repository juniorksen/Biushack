---

import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';
import jwt from 'jsonwebtoken';
import fs from 'fs';
import path from 'path';

const prisma = new PrismaClient();
const JWT_SECRET = 'passar';

// Define la ruta raíz del proyecto como directorio de imágenes
const PROJECT_ROOT_DIRECTORY = path.resolve('./'); // Directorio raíz del proyecto
const IMAGE_DIRECTORY = path.join(PROJECT_ROOT_DIRECTORY, 'public', 'images'); // Directorio de imágenes

// Verifica si la carpeta existe y, si no, la crea
if (!fs.existsSync(IMAGE_DIRECTORY)) {
  fs.mkdirSync(IMAGE_DIRECTORY, { recursive: true });
}

// Función para manejar el registro
const registerUser = async (formData: FormData) => {
  const username = formData.get('username') as string;
  const email = formData.get('email') as string;
  const password = formData.get('password') as string;

  // Validación de la contraseña
  if (password.length < 8) {
    return { success: false, error: 'La contraseña debe tener al menos 8 caracteres.' };
  }

  // Hashea la contraseña
  const hashedPassword = await bcrypt.hash(password, 10);

  // Obtiene los archivos subidos
  const profilePictureFile = formData.get('profile_picture') as File;
  const coverPhotoFile = formData.get('cover_photo') as File;

  // Variables para almacenar las rutas de las imágenes
  let profilePicturePath = '';
  let coverPhotoPath = '';

  try {
    // Guardar la imagen de perfil, si existe
    if (profilePictureFile) {
      const profilePictureFileName = `${username}_profile_${Date.now()}${path.extname(profilePictureFile.name)}`;
      profilePicturePath = path.join(IMAGE_DIRECTORY, profilePictureFileName);

      // Guardar la imagen directamente en la carpeta de imágenes
      fs.writeFileSync(profilePicturePath, Buffer.from(await profilePictureFile.arrayBuffer()));
    }

    // Guardar la imagen de portada, si existe
    if (coverPhotoFile) {
      const coverPhotoFileName = `${username}_cover_${Date.now()}${path.extname(coverPhotoFile.name)}`;
      coverPhotoPath = path.join(IMAGE_DIRECTORY, coverPhotoFileName);

      // Guardar la imagen directamente en la carpeta de imágenes
      fs.writeFileSync(coverPhotoPath, Buffer.from(await coverPhotoFile.arrayBuffer()));
    }

    // Crea el nuevo usuario en la base de datos
    const newUser = await prisma.usuario.create({
      data: {
        username,
        email,
        password: hashedPassword,
        profile_picture_url: profilePictureFile ? `/images/${path.basename(profilePicturePath)}` : null,
        cover_photo_url: coverPhotoFile ? `/images/${path.basename(coverPhotoPath)}` : null,
      },  
    });

    // Generar el token JWT con la información del usuario
    const token = jwt.sign(
      { 
        id: newUser.id, 
        username: newUser.username, 
        email: newUser.email,
        profile_picture_url: newUser.profile_picture_url,
        cover_photo_url: newUser.cover_photo_url
      }, 
      JWT_SECRET,
      {
        expiresIn: '1h',
      }
    );

    // Establecer el token en una cookie
    Astro.cookies.set('token', token, { httpOnly: true });

    // Redirige a la página principal
    return { success: true };
  } catch (error) {
    console.error('Error al crear el usuario:', error);
    return { success: false, error: 'Error al crear la cuenta' };
  }
};

// Si hay un método POST, intenta registrar al usuario
let registrationResult;
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  registrationResult = await registerUser(formData);

  if (registrationResult?.success) {
    return Astro.redirect('/Account');
  }
}

---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
      /* Estilos adicionales para mejorar el contraste */
      input {
          background-color: #f7fafc; /* Fondo claro */
          border: 2px solid #a0aec0; /* Borde gris claro */
          transition: border-color 0.3s;
      }

      input:focus {
          border-color: #4299e1; /* Borde azul al enfocar */
          outline: none; /* Quita el contorno por defecto */
          box-shadow: 0 0 0 2px rgba(66, 153, 225, 0.5); /* Sombra azul al enfocar */
      }

      .zoom {
          transition: transform 0.5s ease; /* Suaviza la transición del zoom */
      }
      
      .zoom:hover {
          transform: scale(0.5); /* Escala la imagen al pasar el mouse */
      }
  </style>
</head>
<body>

<div class="min-h-screen bg-gray-100 text-gray-900 flex justify-center">
  <div class="max-w-screen-xl m-0 sm:m-10 bg-white shadow sm:rounded-lg flex justify-center flex-1">
      <div class="lg:w-1/2 xl:w-5/12 p-6 sm:p-12">
          
          <div class="mt-12 flex flex-col items-center">
              <h1 class="text-2xl xl:text-3xl font-extrabold">
                Crear Cuenta
              </h1>
              <div class="w-full flex-1 mt-8">
                  <div class="mx-auto max-w-xs">
                    
                    <form method="POST" enctype="multipart/form-data" class="space-y-4"> <!-- Agregar `enctype` para soportar archivos -->
                      <div>
                          <label for="username" class="block text-sm font-medium text-gray-700">Nombre de usuario</label>
                          <input type="text" id="username" name="username" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                      </div>
                      <div>
                          <label for="email" class="block text-sm font-medium text-gray-700">Correo electrónico</label>
                          <input type="email" id="email" name="email" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                      </div>
                      <div>
                          <label for="password" class="block text-sm font-medium text-gray-700">Contraseña</label>
                          <input type="password" id="password" name="password" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                      </div>
                      <div>
                          <label for="profile_picture" class="block text-sm font-medium text-gray-700">Foto de perfil</label>
                          <input type="file" id="profile_picture" name="profile_picture" accept="image/*" class="mt-1 block w-full text-sm text-gray-500" />
                      </div>
                      <div>
                          <label for="cover_photo" class="block text-sm font-medium text-gray-700">Foto de portada</label>
                          <input type="file" id="cover_photo" name="cover_photo" accept="image/*" class="mt-1 block w-full text-sm text-gray-500" />
                      </div>
                      <button type="submit" class="w-full bg-green-600 text-white py-2 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2">
                          Crear Cuenta
                      </button>
                      
                      <button type="button" onclick="window.location.href='/login-form'" class="w-full mt-4 bg-blue-600 text-white py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                          Iniciar Sesión
                      </button>
                    
                    </form>
                  </div>
                  
              </div>

              <ul class="flex justify-center mt-5 space-x-5">
                <li>
                    <a href="https://www.facebook.com/junior.rincon.5682" class="text-gray-500 hover:text-gray-900 dark:hover:text-white dark:text-gray-400">
                        <svg class="w-10 h-10" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path fill-rule="evenodd"
                                d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </a>
                </li>
                <li>
                    <a href="https://www.instagram.com/junior_hernandez_rincon/" class="text-gray-500 hover:text-gray-900 dark:hover:text-white dark:text-gray-400">
                        <svg class="w-10 h-10" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path fill-rule="evenodd"
                                d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </a>
                </li>
                <li>
                    <a href="https://github.com/juniorksen" class="text-gray-500 hover:text-gray-900 dark:hover:text-white dark:text-gray-400">
                        <svg class="w-10 h-10" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path fill-rule="evenodd"
                                d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z"
                                clip-rule="evenodd"></path>
                        </svg>
                    </a>
                </li>
                
            </ul>


          </div>
      </div>
      
      <div class="flex-1 bg-[#404040] text-center hidden lg:flex">
        <!-- Contenedor con imagen más alta -->
        <div class="my-4 mx-auto w-full">
          <img src="logo.jpeg" alt="Logo" class="w-3/4 lg:w-full h-[700px] object-cover mx-auto zoom">
        </div>
    </div>
    
      
      
  </div>
</div>

</body>
</html>


